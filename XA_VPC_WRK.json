{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"**Version 1.0** STEP-4 This template creates and installs a XenApp Worker Server into an Existing Farm inside a VPC. Default Domain Administrator password will be the one retrieved from the instance.  For adding members to the domain, ensure that they are launched in the domain member security group created by the Step-1 Infrastructure template and then configure them to use the AD instances private IP addresses as the DNS server. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
   "Parameters":{
		"KeyPairName":{
         "Description":"Public/private key pairs allow you to securely connect to your instance after it launches",
         "Type":"String",
		 "Default":"AutoDesk"
      },
		"XAWorkerInstanceType":{
         "Description":"Amazon EC2 instance type for the XenApp Worker Instance",
         "Type":"String",
         "Default":"t2.medium",
         "AllowedValues":[
            "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
				"g2.2xlarge",
				"g2.8xlarge",
				"r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
				"t2.medium",
				"t2.large"
         ]
      },
		"DomainDNSName":{
         "Description":"Fully qualified domain name (FQDN) of the forest root domain e.g. corp.example.com",
         "Type":"String",
         "Default":"xencloud.net",
         "MinLength":"3",
         "MaxLength":"25",
         "AllowedPattern":"[a-zA-Z0-9]+\\..+"
      },
		"DomainNetBIOSName":{
         "Description":"NetBIOS name of the domain (upto 15 characters) for users of earlier versions of Windows e.g. CORP",
         "Type":"String",
         "Default":"xencloud",
         "MinLength":"1",
         "MaxLength":"15",
         "AllowedPattern":"[a-zA-Z0-9]+"
      },
		"ServerNetBIOSName":{
         "Description":"NetBIOS name of the Server (upto 15 characters)",
         "Type":"String",
         "Default":"XAWORKER",
         "MinLength":"1",
         "MaxLength":"15",
         "AllowedPattern":"[a-zA-Z0-9]+"
      },
		"DomainAdminUser":{
         "Description":"User name for the account that will be used to join the server to the domain. This is separate from the default \"Administrator\" account",
         "Type":"String",
         "Default":"XenAdmin",
         "MinLength":"5",
         "MaxLength":"25",
         "AllowedPattern":"[a-zA-Z0-9]*"
      },
		"DomainAdminPassword":{
         "Description":"Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
         "Type":"String",
         "MinLength":"8",
         "MaxLength":"32",
         "AllowedPattern":"(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
         "Default":"Citrix@123"
      },
		"AZ":{
         "Description":"Name of Availabilty Zone that will contain public & private subnets - Select a valid Zone for your region",
         "Type":"String",
         "Default":"us-west-1a",
         "AllowedValues":[
            "eu-west-1a",
            "eu-west-1b",
            "eu-west-1c",
            "us-east-1a",
            "us-east-1b",
            "us-east-1c",
            "us-east-1d",
            "us-east-1e",
            "us-west-1a",
            "us-west-1b",
            "us-west-1c",
            "ap-southeast-1a",
            "ap-southeast-1b",
            "ap-southeast-2a",
            "ap-southeast-2b",
            "ap-northeast-1a",
            "ap-northeast-1b",
            "ap-northeast-1c",
            "us-west-2a",
            "us-west-2b",
            "us-west-2c",
            "sa-east-1a",
            "sa-east-1b"
         ],
         "ConstraintDescription":"Must be a valid EC2 Availabilty zone for region being deployed to. You can customize if you define a constraint"
      },
        "ADServerNetBIOSName1"  : {
            "Description" : "NetBIOS name of the existing Domain Controller in AZ1, containing the XDINSTALL share with the XenDesktop ISO",
            "Type"        : "String",
            "Default"     : "DC1",
            "MinLength"   : "1",
            "MaxLength"   : "15",
            "AllowedPattern" : "[a-zA-Z0-9]+"
        },
        "ADServer1PrivateIp"        : {
            "Description" : "Fixed private IP for the first existing Active Directory server located in AZ1",
            "Type"        : "String",
            "Default"     : "10.16.3.5"
        },
        "ADServer2PrivateIp"        : {
            "Description" : "Fixed private IP for the second existing Active Directory serverr located in AZ2",
            "Type"        : "String",
            "Default"     : "10.16.4.5"
        },
        "DDCServerNetBIOSName1" : {
            "Description" : "NetBIOS name of the 1st Delivery Controller (upto 15 characters) located in AZ1, containing the RDS License Service",
            "Type"        : "String",
            "Default"     : "XD7DDC01",
            "MinLength"   : "1",
            "MaxLength"   : "15",
            "AllowedPattern" : "[a-zA-Z0-9]+"
        },
        "DDCServerNetBIOSName2" : {
            "Description" : "NetBIOS name of the 2nd XenDesktop Delivery Controller (upto 15 characters)",
            "Type"        : "String",
            "Default"     : "XD7DDC02",
            "MinLength"   : "1",
            "MaxLength"   : "15",
            "AllowedPattern" : "[a-zA-Z0-9]+"
        },
		"DomainMemberSGID":{
         "Description":"ID of the Domain Member Security Group",
         "Type":"String",
		 "Default":"sg-72a3bc10"
      },
		"VPC":{
         "Description":"ID of the VPC",
         "Type":"String",
		 "Default":" vpc-f6100094"
      },
		"WorkerSubnet":{
			"Description":"ID of the XenApp Worker Server Subnet located in AZ.",
			"Type":"String",
			"Default":"subnet-f09d8192"
      }
   },
   "Mappings":{
        "AWSInstanceType2Arch" : {
            "m4.large" : {
                "Arch" : "64"
            },
            "m3.medium" : {
                "Arch" : "64"
            },
            "m3.large"  : {
                "Arch" : "64"
            },
            "t2.medium"  : {
                "Arch" : "64"
            },
            "t2.large" : {
                "Arch" : "64"
            },
            "c4.large" : {
                "Arch" : "64"
            },
            "c4.xlarge" : {
                "Arch" : "64"
            },
            "c3.large"  : {
                "Arch" : "64"
            },
            "c3.xlarge"  : {
                "Arch" : "64"
            }
        },
        "AWSRegionArch2AMI"    : {
            "us-east-1" : {
                "64" : "ami-5b9e6b30"
            },
            "us-west-2" : {
                "64" : "ami-67c7ff57"
            },
            "us-west-1" : {
                "64" : "ami-c5688281"
            },
            "eu-west-1" : {
                "64" : "ami-c1740ab6"
            },
            "eu-central-1" : {
                "64" : "ami-2e87be33"
            },
            "ap-southeast-1" : {
                "64" : "ami-e0d1ebb2"
            },
            "ap-northeast-1" : {
                "64" : "ami-c6b46dc6"
            },
            "ap-southeast-2" : {
                "64" : "ami-16645a75"
            },
			"sa-east-1"      : {
                "64" : "ami-b93bbba4"
            }
        },
   "Resources":{
		"IAMUser":{
         "Type":"AWS::IAM::User",
         "Properties":{
            "Path":"/",
            "Policies":[
               {
                  "PolicyName":"root",
                  "PolicyDocument":{
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":"CloudFormation:DescribeStackResource",
                           "Resource":"*"
                        }
                     ]
                  }
               }
            ]
         }
      },
		"IAMUserAccessKey":{
         "Type":"AWS::IAM::AccessKey",
         "Properties":{
            "UserName":{
               "Ref":"IAMUser"
            }
         }
      },
		"XA7WORKER":{
			"Type":"AWS::EC2::Instance",
			"Metadata":{
            "AWS::CloudFormation::Init":{
               "configSets":{
                        "config" : [
                            "CFNsetup",
                            "rename",
                            "join",
                            "installVDA",
                            "finalize"
                        ]
               },
				"CFNsetup":{
					"files":{
					},
					"services" : {
                            "windows" : {
                                "cfn-hup" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true",
                                    "files"         : [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
						},
					"commands" : {
						"a-set-execution-policy" : {
							"command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            }
                        }
               },
				"rename"     : {
					"commands" : {
						"1-execute-powershell-script-RenameComputer" : {
							"command" : {
								"Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe -Command Rename-Computer -NewName ",
                                            {
                                                "Ref" : "ServerNetBIOSName"
                                            },
                                            " -Restart"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            }
                        }
                    },
                    "join"       : {
                        "commands" : {
                            "a-set-dns-servers" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Get-NetAdapter | Set-DnsClientServerAddress -ServerAddresses ",
                                            {
                                                "Ref" : "ADServer1PrivateIp"
                                            },
                                            ",",
                                            {
                                                "Ref" : "ADServer2PrivateIp"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "30"
                            },
                            "b-join-domain"     : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-Command \"",
                                            "Add-Computer -DomainName ",
                                            {
                                                "Ref" : "DomainDNSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref" : "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref" : "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "-Restart\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            }
                        }
                    },
                    "installVDA"       : {
                        "files" : {
							"C:\\cfn\\scripts\\AddWindowsFeatures.ps1":{
								"content":{
									"Fn::Join":[
									"",
									[
									"import-module servermanager",
									"\n",
									"Install-WindowsFeature RDS-RD-Server,Desktop-Experience,NET-Framework-Core -restart",
									"\n"
									]
									]
								}		
							},
							"C:\\cfn\\scripts\\InstallXDVDA.ps1":{
								"content":{
									"Fn::Join":[
									"",
									[
									"write-output \"Install XenDesktp VDA Script Started.\"",
									"\n",
									"dir \\\\",
									 {
                                                "Ref" : "ADServerNetBIOSName1"
                                            },
                                    "\\XDinstall\\*.iso | Mount-DiskImage",
									"\n",
									"D: ",
									"\n",
									"Start-Process -FilePath \"D:\\X64\\XenDesktop Setup\\XenDesktopVDASetup.exe\" ",
									"-ArgumentList \"/quiet /components vda /controllers ",
									{
										"Ref" : "DDCServerNetBIOSName1"
									},
									".",
									{
										"Ref" : "DomainDNSName"
									},
									" ",
									{
										"Ref" : "DDCServerNetBIOSName2"
									},
									".",
									{
										"Ref" : "DomainDNSName"
									},
																		" /enable_hdx_ports /noreboot /enable_remote_assistance /logpath c:\\cfn\\log\" ",
									"-workingDirectory \"D:\\X64\\XenDesktop Setup\"",
									"\n",
									"write-output \"Install XenDesktop VDA Script Finished.\"",
									"\n"
                              ]
                           ]
                        }
                     }
                        },
                        "commands" : {
                            "a-execute-powershell-script-AddWindowsFeatures"	: {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " RemoteSigned",
                                            " C:\\cfn\\scripts\\AddWindowsFeatures.ps1",
                                            "\n"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "b-reboot"											: {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe -Command Restart-Computer -Force"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            },
							"c-execute-powershell-script-InstallXDVDA":{
								"command":{
									"Fn::Join":[
										"",
										[
											"powershell.exe ",
											"-ExecutionPolicy",
											" Unrestricted",
											" C:\\cfn\\scripts\\InstallXDVDA.ps1"
										]
									]
								},
								"IgnoreErrors": "true",
								"waitAfterCompletion":"600"
							},
                            "d-set-RDS-Licensing-Mode"							: {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services' -Name fDisableTerminalServerTooltip -Value 1 -PropertyType Dword",
                                            ";",
                                            "New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services' -Name LicenseServers -Value ",
											{
												"Ref" : "DDCServerNetBIOSName1"
											},
											".",
											{
												"Ref" : "DomainDNSName"
											},
                                            ";",
                                            "New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services' -Name LicensingMode -Value 4 -PropertyType Dword",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "150"
                            },
                            "e-reboot"											: {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe -Command Restart-Computer -Force"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            }
                        }
                    },
                    "finalize"         : {
                        "commands" : {
                            "1-signal-success" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0 \"",
                                            {
                                                "Ref" : "XA7WORKERWaitHandle"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
			"Properties":{
			"ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "XAWorkerInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
            "InstanceType":{
               "Ref":"XAWorkerInstanceType"
				},
            "SubnetId":{
               "Ref":"WorkerSubnet"
				},
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Ref":"ServerNetBIOSName"
                  }
               }
            ],
            "SecurityGroupIds":[
               {
                  "Ref":"DomainMemberSGID"
               }
            ],
            "KeyName":{
               "Ref":"KeyPairName"
            },
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "",
                     [
                        "<script>\n",
                        "cfn-init.exe -v -c config -s ",
                        {
                           "Ref":"AWS::StackName"
                        },
                        " -r XAWORKER ",
                        " --access-key ",
                        {
                           "Ref":"IAMUserAccessKey"
                        },
                        " --secret-key ",
                        {
                           "Fn::GetAtt":[
                              "IAMUserAccessKey",
                              "SecretAccessKey"
                           ]
                        },
                        " --region ",
                        {
                           "Ref":"AWS::Region"
                        },
                        "\n",
                        "SCHTASKS /Create /SC MINUTE /MO 10 /TN cfn-hup /RU SYSTEM /TR \"cfn-hup.exe -v --no-daemon\"",
                        "\n",
                        "</script>"
                     ]
                  ]
               }
            }
         }
      },
		"XA7WORKERWaitCondition"          : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "Properties" : {
                "Handle" : {
                    "Ref" : "XA7WORKERWaitHandle"
                },
                "Timeout" : "7200"
            }
        },
        "XA7WORKERWaitHandle"             : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        }
   },
   "Outputs":{
      "LocalAdmin":{
         "Value":"Administrator",
         "Description":"Please retrieve Administrator password of the instance"
      },
      "ServerNetBIOSName":{
         "Value":{
            "Ref":"ServerNetBIOSName"
         },
         "Description":"NetBIOS name of the XenApp Worker instance in the selected Availability Zone"
      }

   }
}